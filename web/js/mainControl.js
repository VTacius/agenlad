$(document).ready(function(){$.indexControl=new Object,$.indexControl.validacion=!1,$("#pswd_info").hide(),$("input").val("")}),$("#passchangeprima").keyup(function(){$("#pswd_info").show(),$("#msgadvertencia").hide(),validar($("#passchangeprima").val())}),$("#passchangeprima").focusin(function(){$("#msgadvertencia").hide()}),$("#passchangeprima").blur(function(a){a.stopPropagation(),$.indexControl.validacion||$("#passchangeprima").focus()}),$("#passchangeconfirm").focus(function(a){a.stopPropagation(),$.indexControl.validacion&&$("#pswd_info").hide()}),$("#passchangeconfirm").focusin(function(){$("#msgadvertencia").hide()}),$("#enviar").click(function(a){a.stopPropagation(),a.preventDefault(),comprobarPassword()&&procesarDatos()});var comprobarPassword=function(){var a=$("#passchangeprima").val(),n=$("#passchangeconfirm").val();return $.indexControl.validacion?a===n||(""===a||""===n?($("#msgadvertencia").show(),$("#msgadvertencia").addClass("alert-danger"),$("#advertencia").text("La confirmación esta vacía"),!1):($("#msgadvertencia").show(),$("#msgadvertencia").addClass("alert-danger"),$("#advertencia").text("La confirmación no coincide"),!1)):($("#msgadvertencia").show(),$("#msgadvertencia").addClass("alert-danger"),$("#advertencia").text("Por favor, introduzca valores válidos"),!1)},confirmar=function(a,n,r){return a.match(r)?($(n).removeClass("invalid").addClass("valid"),!0):($(n).removeClass("valid").addClass("invalid"),!1)},mostrarResultado=function(a){mostrarErrorConexion(a),pmostrarError(a),pmostrarMensaje(a),isEmpty(a.error)&&setTimeout(function(){document.location.reload(!0)},3500)},procesarDatos=function(){$.ajax({type:"POST",url:"/main/cambio",dataType:"json",data:{passchangeprima:$("#passchangeprima").val(),passchangeconfirm:$("#passchangeconfirm").val()},success:mostrarResultado,error:errorOnResponse})},validar=function(a){var n=confirmar(a,"#length",/(.){8,}/),r=confirmar(a,"#capital",/(.*[A-Z]){1,10}/),o=confirmar(a,"#number",/(.*[0-9]){1,10}/),i=confirmar(a,"#char",/(.*[\.|_|@|&|\+|!|\$|\*]){1,10}/);$.indexControl.validacion=n&&r&&o&&i};
//# sourceMappingURL=data:application/json;base64,
